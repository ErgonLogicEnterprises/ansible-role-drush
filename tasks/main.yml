---
# tasks file for sparkfabrik.drush
- name: Install Drush globally
  get_url: url={{ drush_phar_path }} dest={{ drush_path }}

- name: Set drush execution
  file: path=/usr/local/bin/drush mode="u+x,g+x"

- name: Check init files
  stat: path=~/.drush/drushrc.php
  register: drushrc

- name: Init drush
  shell: drush init
  args:
    executable: /bin/bash
  when: drushrc.stat.exists == false

- name: Drush | Create alias configuration folder
  file: path=/etc/drush state=directory

#- name: Drush | Load PHP configuration
#  template: src=etc--drush--drush.ini.j2 dest=/etc/drush/drush.ini mode=444
#  notify: drush cache clear
#- name: Clone Drush from GitHub.
#  git:
#    repo: https://github.com/drush-ops/drush.git
#    dest: "{{ drush_install_path }}"
#    version: "{{ drush_version }}"
#    update: "{{ drush_keep_updated }}"
#    force: "{{ drush_force_update }}"
#  register: drush_clone

#- name: Check for composer.json
#  stat: path={{ drush_install_path }}/composer.json
#  register: drush_composer

# See: https://github.com/geerlingguy/ansible-role-drush/issues/6
#- name: Ensure Drush can be installed on Debian Wheezy.
#  shell: >
#    {{ composer_path }} update {{ drush_composer_cli_options }}
#    chdir={{ drush_install_path }}
#  when: drush_clone.changed and ansible_distribution == "Debian" and ansible_distribution_release == "wheezy" and drush_composer.stat.exists

#- name: Install Drush dependencies with Composer.
#  shell: >
#    {{ composer_path }} install {{ drush_composer_cli_options }}
#    chdir={{ drush_install_path }}
#  when: drush_clone.changed and drush_composer.stat.exists

#- name: Create drush symlink.
#  file:
#    src: "{{ drush_install_path }}/drush"
#    dest: "{{ drush_path }}"
#    state: link

#- name: Run drush to finish setting it up.
#  command: "{{ drush_path }}"
#  register: drush_result
#  changed_when: "'Execute a drush command' not in drush_result.stdout"
#  become: no
